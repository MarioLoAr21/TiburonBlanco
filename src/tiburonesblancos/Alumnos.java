/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tiburonesblancos;

import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static tiburonesblancos.RAlumnos.getConection;
import static tiburonesblancos.Registro.getConection;

/**
 *
 * @author Giuseppe
 */
public class Alumnos extends javax.swing.JFrame {

  
//----------------------------------------------------------------------------------------------------    
static String login="root";
static String password="16070065";
static String url="jdbc:mysql://localhost/tiburonesblancos?characterEncoding=latin1";
PreparedStatement ps;
ResultSet rs;
public static Connection getConection()
{
Connection conn = null;
    try
           {
              Class.forName ("com.mysql.jdbc.Driver").newInstance ();
               conn = DriverManager.getConnection (url, login, password);               
               System.out.println ("Conexion establecida");   
           }    catch (Exception e)
           {
               System.err.println ("Hubo problema para la conexi√≥n"+e);
           }
           
        return conn;
 }

    
private void limpiarCajas()
{
   // txtIdM.setText(null);
   // txtIdP.setText(null);
   // txtCostoM.setText(null);
    jTxtBApellido.setText(null);
    jTextBNom.setText(null);
    
        
        
 }
//----------------------------------------------------------------------------------------------------
int cont;
public void validar()
{
     if(jtxtNombre.getText().equals("")){cont++;}
    
}
      public String getUsuario()
{
    String v="";
    Connection con=null;
        try{
            con=getConection();
            ps=con.prepareStatement("SELECT idUsuario FROM Usuarios WHERE permisos=? ");
            ps.setString(1,"1");
            rs=ps.executeQuery();
            if(rs.next())
            {
                v=(rs.getString("idUsuario"));                
            }
            else
            {
                JOptionPane.showMessageDialog(null,"No se encontro el dato");
                limpiarCajas();
            }
        }catch(Exception e)
        {
            System.err.println(e+"Error  :D");
        }
        return v;
}

    public Alumnos() {
       
        initComponents();
        this.setLocationRelativeTo(null);    
        jTextBNom.setDocument(new SoloMayusculas());
        jTxtBApellido.setDocument(new SoloMayusculas());
        
       
        //rsscalelabel.RSScaleLabel.setScaleLabel(jLFondo,"src/imgs/Actividades_Natacion.jpg");
         Connection con=null;
        try
        {
            DefaultTableModel modelo =new DefaultTableModel();
            jTAlumnos.setModel(modelo);
            
            PreparedStatement ps= null;
            ResultSet rs=null;
            //PreparedStatement ps2= null;
           // ResultSet rs2=null;
            con=getConection();
            String sql="SELECT idAlumnos, nombre, apellidoP, apellidoM FROM Alumnos";
            
            ps =con.prepareStatement(sql);
            rs = ps.executeQuery();
            //ps2 =con.prepareStatement(id);
            //rs2 = ps.executeQuery();
            
            ResultSetMetaData rsMd= rs.getMetaData();
            int cantidadColumnas =rsMd.getColumnCount();
            modelo.addColumn("idAlumno");
            modelo.addColumn("nombre");
            modelo.addColumn("apellidoP");
            modelo.addColumn("apellidoM");
            while(rs.next()){
                
                Object[] filas = new Object[cantidadColumnas];
                for(int i=0;i<cantidadColumnas;i++)
                {
                    filas[i]=rs.getObject(i+1);
                }
                modelo.addRow(filas);
            }
            
        }
        catch(SQLException e){
            System.err.println(e.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAlumnos = new javax.swing.JTable();
        jTextBNom = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jtxtIdAlumno = new javax.swing.JTextField();
        jtxtNombre = new javax.swing.JTextField();
        jtxtApellidoP = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jTxtBApellido = new javax.swing.JTextField();
        jtxtApellidoM = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLFondo = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(6);
        setMinimumSize(new java.awt.Dimension(1920, 1080));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTAlumnos = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        jTAlumnos.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jTAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "idAlumno", "nombre", "apellidoP", "apellidoM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTAlumnos.setRowHeight(24);
        jTAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTAlumnosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTAlumnos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 1370, 530));

        jTextBNom.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        jTextBNom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextBNomKeyTyped(evt);
            }
        });
        getContentPane().add(jTextBNom, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 120, 205, -1));

        jLabel5.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        jLabel5.setText("Modificar");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1390, 820, 90, -1));

        jLabel4.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        jLabel4.setText("Agregar");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 820, 70, -1));

        jLabel6.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        jLabel6.setText("Eliminar");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1530, 820, -1, -1));

        id.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 80, 30));

        jLabel1.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        jLabel1.setText("Nombre:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 120, 80, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/recargar.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/recargar.png"))); // NOI18N
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/recargar2.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1550, 90, -1, -1));

        jtxtIdAlumno.setEditable(false);
        jtxtIdAlumno.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        jtxtIdAlumno.setText("0");
        jtxtIdAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtIdAlumnoActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtIdAlumno, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 790, 180, -1));

        jtxtNombre.setEditable(false);
        jtxtNombre.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        getContentPane().add(jtxtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 790, 170, -1));

        jtxtApellidoP.setEditable(false);
        jtxtApellidoP.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        jtxtApellidoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtApellidoPActionPerformed(evt);
            }
        });
        getContentPane().add(jtxtApellidoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 790, 190, -1));

        jButton3.setFont(new java.awt.Font("Century", 0, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/Menu.png"))); // NOI18N
        jButton3.setText("Menu");
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/Menu.png"))); // NOI18N
        jButton3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/Menu2.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 60));

        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/editar.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/editar.png"))); // NOI18N
        jButton2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/editar2.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1380, 730, 110, 100));

        bEliminar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bEliminar.setForeground(new java.awt.Color(255, 255, 255));
        bEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/eliminar.png"))); // NOI18N
        bEliminar.setToolTipText("");
        bEliminar.setBorder(null);
        bEliminar.setBorderPainted(false);
        bEliminar.setContentAreaFilled(false);
        bEliminar.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/eliminar.png"))); // NOI18N
        bEliminar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/eliminar2.png"))); // NOI18N
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(bEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1520, 740, 110, -1));

        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/agregar.png"))); // NOI18N
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/agregar.png"))); // NOI18N
        jButton4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/agregar2.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1230, 730, 110, 100));

        jTxtBApellido.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        jTxtBApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtBApellidoActionPerformed(evt);
            }
        });
        jTxtBApellido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtBApellidoKeyTyped(evt);
            }
        });
        getContentPane().add(jTxtBApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 120, 205, -1));

        jtxtApellidoM.setEditable(false);
        jtxtApellidoM.setFont(new java.awt.Font("Century", 0, 18)); // NOI18N
        getContentPane().add(jtxtApellidoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 790, 170, -1));

        jLabel3.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        jLabel3.setText("Apellido Paterno:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(872, 120, 170, -1));

        jLabel2.setFont(new java.awt.Font("Century", 1, 18)); // NOI18N
        jLabel2.setText("ID Alumno:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(321, 120, 110, 30));

        jLFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/Menu/Alumnos_.jpg"))); // NOI18N
        getContentPane().add(jLFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 1080));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          // TODO add your handling code here:
        Connection con=null;
        String campo = jTextBNom.getText();
        String campo2 = jTxtBApellido.getText();
        String idee= id.getText();
        String where="";
        if(!"".equals(idee)){
            where= " WHERE "+"idAlumnos='"+idee+"'";            
        }
        if(!"".equals(campo)){
            where= " WHERE "+"nombre like'"+campo+"%'";            
        }
        if(!"".equals(campo2)){
            where= " WHERE apellidoP like'"+campo2+"%'";
            
        }
        if(!"".equals(campo) && !"".equals(campo2)){
            where= " WHERE nombre like'"+campo+"%'"+"AND apellidoP like'"+campo2+"%'";            
        }
      
        try
        {
            DefaultTableModel modelo =new DefaultTableModel();
            jTAlumnos.setModel(modelo);
            
            PreparedStatement ps= null;
            ResultSet rs=null;
            con=getConection();
            String sql="SELECT idAlumnos, nombre, apellidoP, apellidoM FROM Alumnos "+where;
            ps =con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            ResultSetMetaData rsMd= rs.getMetaData();
            int cantidadColumnas =rsMd.getColumnCount();
            modelo.addColumn("idAlumno");
            modelo.addColumn("nombre");
            modelo.addColumn("apellidoP");
            modelo.addColumn("apellidoM");
            while(rs.next()){
                Object[] filas = new Object[cantidadColumnas];
                for(int i=0;i<cantidadColumnas;i++)
                {
                    filas[i]=rs.getObject(i+1);
                }
                modelo.addRow(filas);
            }
            
        }
        catch(SQLException e){
            System.err.println(e.toString());
        }
        limpiarCajas();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        int idA=Integer.parseInt(jtxtIdAlumno.getText());
        System.out.println(idA);
        if(idA==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Seleccione un Alumno");        
        }
        else
        {
            RAlumnos ra=new RAlumnos(jtxtIdAlumno.getText());
            this.setVisible(false);
            ra.setVisible(true);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTAlumnosMouseClicked
        // TODO add your handling code here:
        /*PreparedStatement ps=null;
        ResultSet rs=null;       
        try{
             Connection con=null;
            //Conexion objCon=new Conexion();
            //Connection con = objCon.getConection();
            int Fila =jTAlumnos.getSelectedRow();
            String codigo=jTAlumnos.getValueAt(Fila, 0).toString();
            
            ps=con.prepareStatement("SELECT idAlumos, nombre, apellidoP, apellidoM FROM Alumos WHERE idAlumos=?");
            ps.setString(1,codigo);
            rs=ps.executeQuery();
            
            while(rs.next()){
            jtxtIdAlumno.setText(rs.getString("idAlumos"));
            jtxtNombre.setText(rs.getString("nombre"));
            jtxtApellidoP.setText(rs.getString("apellidoP"));
            jtxtApellidoM.setText(rs.getString("ApellidoM"));
            }
        }
        catch(SQLException e)
                {
                    System.out.println(e);
                }
        */
        int i= jTAlumnos.getSelectedRow();
        TableModel model= jTAlumnos.getModel();
        jtxtIdAlumno.setText(model.getValueAt(i,0).toString());
        jtxtNombre.setText(model.getValueAt(i,1).toString());
        jtxtApellidoP.setText(model.getValueAt(i,2).toString());
        jtxtApellidoM.setText(model.getValueAt(i,3).toString());
    }//GEN-LAST:event_jTAlumnosMouseClicked

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        // TODO add your handling code here:
        cont=0;
        validar();
        if(cont==0)
        {
        Connection con=null;
        
        String u=getUsuario();
        if(getUsuario().equals("1"))
        {
            int idA=Integer.parseInt(jtxtIdAlumno.getText());
        System.out.println(idA);
        if(idA==0)
        {
            JOptionPane.showMessageDialog(rootPane,"Seleccione un Alumno");        
        }
        else
        {
         try{
            con=getConection();
            ps= con.prepareStatement("DELETE FROM Alumnos WHERE idAlumnos=?");

            ps.setString(1,jtxtIdAlumno.getText());

            int res=ps.executeUpdate();
            if(res>0)
            {
                JOptionPane.showMessageDialog(rootPane,"Alumno Eleminado");
                limpiarCajas();
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane,"Error al Eleminar");
                limpiarCajas();
            }
            con.close();
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
        }
        
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane,"No Tiene Permisos Para Eleminar");
        }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane,"Seleccione un registro");
        }
            
    }//GEN-LAST:event_bEliminarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        RAlumnos ra=new RAlumnos();
        this.setVisible(false);
        ra.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jtxtIdAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtIdAlumnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtIdAlumnoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Menu m=new Menu();
        m.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jtxtApellidoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtApellidoPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtApellidoPActionPerformed

    private void jTextBNomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextBNomKeyTyped
         // TODO add your handling code here:
//         char c=evt.getKeyChar();
  //      if((c<'a'|| c>'z') && (c<'A'|| c>'Z'))evt.consume();
    }//GEN-LAST:event_jTextBNomKeyTyped

    private void jTxtBApellidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtBApellidoKeyTyped
         // TODO add your handling code here:
         //char c=evt.getKeyChar();
       // if((c<'a'|| c>'z') && (c<'A'|| c>'Z'))evt.consume();
    }//GEN-LAST:event_jTxtBApellidoKeyTyped

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void jTxtBApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtBApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtBApellidoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Alumnos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEliminar;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLFondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTAlumnos;
    private javax.swing.JTextField jTextBNom;
    private javax.swing.JTextField jTxtBApellido;
    private javax.swing.JTextField jtxtApellidoM;
    private javax.swing.JTextField jtxtApellidoP;
    private javax.swing.JTextField jtxtIdAlumno;
    private javax.swing.JTextField jtxtNombre;
    // End of variables declaration//GEN-END:variables
}
